name: Continuous Integration
on:
  push:
    paths:
      - 'CHANGELOG.md'
  workflow_dispatch:
permissions:
  contents: write
jobs:
  Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-pkgconf
            make
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build
        run : |
          cmake -G "Unix Makefiles" .
          make all
          mkdir release
          cp meow.exe release
          cp friends.txt release
          cp README.md release
          cp TODO.md release
          cp CHANGELOG.md release
          cp libcurl.dll release
          cp libcpr.dll release
          cp notification.wav release
          cp notification-2.wav release
      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-windows
          path: |
            release/meow.exe
            release/TODO.md
            release/libcurl.dll
            release/libcpr.dll
            release/README.md
            release/CHANGELOG.md
            release/notification.wav
  Release:
    needs: [Windows]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [windows]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract tag name
        id: tag
        run: echo ::set-output name=VERSION::$(tail -n1 CHANGELOG.md | head -n1)

      - uses: actions/download-artifact@v2
      - name: Zip artifacts
        run: |
         zip -r release-${{matrix.build}}.zip release-${{matrix.build}}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
         files: |
           release-${{matrix.build}}.zip
         body: |
          This is an automated release of the latest version of CF-Notif-CPP.
         prerelease: true
         tag_name: ${{ steps.tag.outputs.VERSION }}
         name: Release ${{ steps.tag.outputs.VERSION }}
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
